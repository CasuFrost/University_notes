{
    "id": 75,
    "description": "dati un'altezza, una larghezza, una lista di colori, una lista di altezze, una larghezza, e un path ad un file Png, crea un'immagine di sfondo blu e ci disegna sopra i rettangoli con le diverse altezze, ritorna il numero di pixel che appartengono a più di un rettangolo.",
    "text": "\n    Definite la funzione es10 che riceve come argomenti\n        h:                  altezza della immagine\n        w:                  larghezza della immagine\n        listaColori:        una lista di N colori nel formato (R, G, B) che devono essere applicati, nell'ordine da sinistra a destra, ai rettangoli\n        listaAltezze:       una lista di N altezze < h\n        larghezzaPalazzo:   la larghezza di ciascuno dei rettangoli da disegnare\n        filePngOut:         path del file PNG in cui salvare l'immagine\n        :return             numero di pixel cambiati piu' di 1 volta\n    e che crea una immagine di dimensioni w,h con sfondo blu (0,0,255).\n    Sulla immagine devono essere disegnati N rettangoli equispaziati tutti di larghezza larghezzaPalazzo, appoggiati in basso.\n    L'altezza ed il colore del rettangolo i-esimo (da sinistra a destra) e' data dallo i-esimo elemento delle liste listaAltezze e listaColori.\n    I rettangoli devono essere disegnati in modo che i rettangoli piu' bassi restino in primo piano rispetto ai rettangoli piu' alti.\n    La funzione deve inoltre ritornare il numero di pixel che appartengono a piu' di un rettangolo\n    (ovvero quelli di rettangoli che sono stati coperti da almeno un altro rettangolo)\n\n    Nota:   assumete che la larghezza w della immagine sia sempre un multiplo di (1+N),\n            in modo che il centro della posizione x di ciascun palazzo sia un valore intero\n    Nota:   assumete che larghezzaPalazzo sia un valore pari\n    Nota:   assumete che tutte le altezze siano minori o uguali dell'altezza h della immagine\n",
    "algorithm": "La funzione può avere due implementazioni rispetto all'interpretazione delle parole 'rettangoli equispaziati', per le due interpretazioni vedere il file solution.py\n\nes75(..)\n\tcreo l'immagine w*h tutta blu\n\tinizializzo una matrice count di zeri di grandezza uguale all'immagine\n\tinizializzo una lista vuota\n\tprendo la lunghezza N della lista delle altezze\n\tda qui in avanti dipoende dall'interpretazione data\n\t...\n\n\ndefinisco una funzione drawRettangolo(img, l, r, t, b, c, counts):\n\tla funzione disegna il rettangolo di colore c e aggiorna la matrice counts\n\tper evitare di sbordare dall'immagine calcolo nuovi valori per l, r, t, b\n\tinizializzo w e h alle dimensioni dell'immagine\n\tl = il massimo tra l e 0\n\tr = minimo tra r e w\n\tt = massimo tra t e 0\n\tb = minimo tra b e h\n\tper ogni pixel del rettangolo:\n\t\tcoloro il pixel del colore c\n\t\taggiorno la matrice counts",
    "tags": ["Immagini", "Matrici"],
    "effort": 8,
    "clues": [],
    "from": "esame-15-2-18"
}